{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\home\\controller\\stbui.js"
    ],
    "names": [
        "indexAction",
        "display",
        "configAction",
        "assign",
        "path",
        "process",
        "cwd",
        "name",
        "split",
        "pop",
        "operateAction",
        "modeAction",
        "writeconfigAction",
        "domain",
        "post",
        "base_css",
        "css",
        "base_js",
        "js",
        "think",
        "isEmpty",
        "isArray",
        "c",
        "concat",
        "j",
        "tpl",
        "stbuiTemplate",
        "appName",
        "version",
        "formatDate",
        "coverFormat",
        "writeFileSync",
        "json",
        "options",
        "RESOURCE_PATH",
        "result",
        "readFileSync",
        "replace",
        "arr",
        "ext",
        "data",
        "map",
        "value",
        "join",
        "now",
        "Date",
        "y",
        "getFullYear",
        "m",
        "getMonth",
        "d",
        "getDate",
        "H",
        "getHours",
        "M",
        "getMinutes",
        "S",
        "getSeconds"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\home\\controller\\stbui.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport fs from 'fs';\n\nexport default class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    indexAction() {\n        return this.display();\n    }\n\n    configAction() {\n        this.assign({\n            path: process.cwd(),\n            name: process.cwd().split('\\\\').pop()\n        });\n\n        return this.display();\n    }\n\n    operateAction() {\n        this.assign({\n            path: process.cwd(),\n            name: process.cwd().split('\\\\').pop()\n        });\n\n        return this.display();\n    }\n\n    modeAction() {\n        return this.display();\n    }\n\n    writeconfigAction() {\n        let domain = this.post('domain');\n        let base_css = this.post('base_css');\n        let css = this.post('css');\n        let base_js = this.post('base_js');\n        let js = this.post('js');\n        //\n        // if(think.isEmpty(domain)) {\n        //     domain = 'http://emres.dfcfw.com/stock/201610121223';\n        // }\n\n        if (think.isEmpty(base_css)) {\n            base_css = [];\n        }\n\n        if (think.isEmpty(css)) {\n            css = [];\n        }\n\n        if (think.isEmpty(base_js)) {\n            base_js = [];\n        }\n\n        if (think.isEmpty(js)) {\n            js = [];\n        }\n\n        if (!think.isArray(base_js)) {\n            base_js = [base_js];\n        }\n\n        if (!think.isArray(js)) {\n            js = [js];\n        }\n\n        let c = base_css.concat(css);\n        let j = base_js.concat(js);\n\n        let tpl = this.stbuiTemplate({\n            domain: domain,\n            appName: '',\n            version: this.formatDate(),\n            js: this.coverFormat(j, 'js'),\n            css: this.coverFormat(c, 'css')\n        });\n\n        // 写入到执行命令行的目录下\n        let cwd = process.cwd() + '/stbui.conf.js';\n        fs.writeFileSync(cwd, tpl, 'utf-8');\n\n        this.json(tpl);\n    }\n\n    stbuiTemplate(options) {\n        let path = think.RESOURCE_PATH + '/static/config.js';\n\n        let result = fs.readFileSync(path, 'utf-8');\n        result = result\n            .replace(/{{domain}}/g, options.domain)\n            .replace(/{{version}}/g, options.version)\n            .replace(/{{appName}}/g, options.appName)\n            .replace(/{{js}}/g, options.js)\n            .replace(/{{css}}/g, options.css)\n        ;\n\n        return result;\n    }\n\n    coverFormat(arr, ext) {\n\n        if (think.isEmpty(arr) || !think.isArray(arr)) {\n            return 'framework/**/*.' + ext;\n        }\n\n        let data = arr.map(value=> {\n            return 'framework/' + value + '/*.' + ext;\n        });\n\n        return \"{\" + data.join(',') + \"}\";\n    }\n\n    formatDate() {\n        var now = new Date();\n        var y = now.getFullYear();\n        var m = now.getMonth() + 1;\n        var d = now.getDate();\n        var H = now.getHours();\n        var M = now.getMinutes();\n        var S = now.getSeconds();\n\n        m = m < 10 ? '0' + m : m;\n        d = d < 10 ? '0' + d : d;\n        H = H < 10 ? '0' + H : H;\n        M = M < 10 ? '0' + M : M;\n        S = S < 10 ? '0' + S : S;\n\n        return y + '' + m + '' + d + '' + H + '' + M;\n    }\n\n}"
    ]
}